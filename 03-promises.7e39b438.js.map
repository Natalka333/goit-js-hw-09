{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SACxBD,SAASC,cAAc,uBACnBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBAC7BD,SAASC,cAAc,yBA8BrC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,EAAUS,MAAAR,IAEpBG,EAAO,C,SAAEJ,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,CArCbL,EAAOc,iBAAiB,SAExB,SAA0BC,GACxBA,EAAMC,iBAEN,MAAQH,MAAAI,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,cAAcC,SAEpD,IAAIC,EAAaC,OAAON,EAAMO,OAC1BC,EAAYF,OAAOL,EAAKM,OACxBE,EAAcH,OAAOJ,EAAOK,OAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCxB,EAAcwB,EAAGL,GACdM,MAAK,EAACxB,SAAEA,EAAUS,MAAAgB,MACjBC,EAAAhC,GAASiC,OAAOC,QACd,uBAAqB5B,QAAiByB,MAAU,IAGnDI,OAAM,EAAC7B,SAAEA,EAAUS,MAAAqB,MAClBJ,EAAAhC,GAASiC,OAAOI,QACd,sBAAoB/B,QAAe8B,MAAU,IAGnDZ,GAAcG,EACdV,EAAMK,cAAcgB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst inputStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\nconst btnEl = document.querySelector('button[type=\"submit\"]');\n\nformEl.addEventListener('click', handleCreateProm);\n\nfunction handleCreateProm(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget.elements;\n\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n\n  for (let i = 1; i <= inputAmount; i += 1) {\n    createPromise(i, inputDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    inputDelay += inputStep;\n    event.currentTarget.reset();\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay4","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","event","preventDefault","delay1","step","amount","currentTarget","elements","inputDelay","Number","value","inputStep1","inputAmount1","i","then","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure","reset"],"version":3,"file":"03-promises.7e39b438.js.map"}